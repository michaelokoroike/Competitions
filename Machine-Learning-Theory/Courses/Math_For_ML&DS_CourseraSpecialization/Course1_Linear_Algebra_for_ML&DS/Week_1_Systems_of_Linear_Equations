WEEK 1: Systems of Linear Equations

* SPECIALIZATION & COURSE INTRODUCTION
  Specialization Introduction
  **** *Introduced to what to expect in all three courses of the specialization. The first one, this Linear Algebra course for Machine Learning
        and Data Science, teaches us how to use vectors and matrices to store and compute on data and to build systems of linear equations by 
        writing code and using these data structures to transform data efficiently. 
       *The second one, Calculus for Machine Learning, teaches us optimization methods like gradient descent and Newton's method. 
       *The third and final one, Probability and Statistics for Machine Learning and Data Science, we learn about probability and 
        distributions, and concepts like p-values and maximum likelihood estimation.
  Course Introduction
  **** *Introduced to what to expect in this course. From the transcript, "In the first week you will construct systems of equations from real 
        life examples and identify the matrix representation corresponding to these systems. From there, you will determine some important 
        concepts such as singularity and linear independence. You will also learn to calculate the determinant and you'll learn some useful 
        row operations for simplifying matrices."
       *"By the end of week two you will be comfortable solving two by two and three by three systems of equations, and you'll be familiar with 
         concepts such as the rank of a matrix."
       *"In week three, we will swim into the depth of the simplest representation of a greater values, the vector, and how matrices can transform 
         one vector into another."
       *"And in week four, you will learn some more advanced concepts such as eigen values and eigen vectors."
  What to Expect and How to Succeed
  **** *All that is recommended; solve a simple equation with one unknown variable (2x + 7 = 17, for example), and know how to construct 
        simple plots in the coordinate system (plot y = x, for example).

* SYSTEMS OF EQUATIONS
  Linear Algebra Applied I
  **** *Most useful math field in machine learning
       *Example of linear regression; intuition of finding the line of best fit, which says if you know the value of an input variable,
        you can multiply it by a constant, and add a noise constant to be able to reasonably estimate an output (wx + b is the form; the
        input is multiplied by a weight w and that producti is added to a bias b)
       *In example, as you add variables, you add dimensions
       *Notation of wx + b in a dataset is w1x1***(m) + b = y**(m); the 1 represents the number input in the equation, and the m represents
        the row of the equation in the dataset (basically the individual example)
  Linear Algebra Applied II
  **** *Continues on linear regression example; usine matrices and vectors is literally an efficient/short-form way to write down a 
        w1x1***(m) + b = y**(m) model with a large m (number of rows)
       *The system we generate with the rows/examples with weights and biases for the x and y values is a system of linear equations
       *We are given a system of equations, and we are asked if it is a singular/non-singular system, if we can solve it, if we can
        represent the system as a a matrix and a vector (the dot product of the weights and the x's), and can we calculate the
        determinant of the matrix
  System of Sentences
  **** *We are taught about complete, redundant and contradictory systems with sentences (COMPLETE = the dog is black and the cat is orange,
        REDUNDANT = the dog is black and the dog is black, CONTRADICTORY = the dog is black and the dog is white). Complete systems have
        as many has many pieces of information as they do sentences; redundant systems have multiple sentences that say the same one thing;
        contradictory systems have sentences that can't be true at the same time.
       *Redundant and contradictory systems are called SINGULAR systems; complete systems are NONSINGULAR systems. 
       *NONSINGULAR = systems, in the sentence example, with as many unique pieces of information as sentences
